define(['dart_sdk', 'packages/firebase/src/storage.dart', 'packages/firebase/src/js.dart'], (function load__packages__firebase__src__remote_config_dart(dart_sdk, packages__firebase__src__storage$46dart, packages__firebase__src__js$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const async = dart_sdk.async;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const utils = packages__firebase__src__storage$46dart.src__utils;
  const js = packages__firebase__src__js$46dart.src__js;
  var remote_config = Object.create(dart.library);
  var $map = dartx.map;
  var $_get = dartx._get;
  dart._checkModuleNullSafetyMode(true);
  var T = {
    MapOfString$dynamic: () => (T.MapOfString$dynamic = dart.constFn(core.Map$(core.String, dart.dynamic)))(),
    MapEntryOfString$RemoteConfigValue: () => (T.MapEntryOfString$RemoteConfigValue = dart.constFn(core.MapEntry$(core.String, remote_config.RemoteConfigValue)))(),
    dynamicToMapEntryOfString$RemoteConfigValue: () => (T.dynamicToMapEntryOfString$RemoteConfigValue = dart.constFn(dart.fnType(T.MapEntryOfString$RemoteConfigValue(), [dart.dynamic])))(),
    MapOfString$RemoteConfigValue: () => (T.MapOfString$RemoteConfigValue = dart.constFn(core.Map$(core.String, remote_config.RemoteConfigValue)))(),
    ExpandoOfRemoteConfig: () => (T.ExpandoOfRemoteConfig = dart.constFn(core.Expando$(remote_config.RemoteConfig)))()
  };
  var T$Eval = Object.assign({
    _: () => T$Eval
  }, T);
  var S = {
    _: () => S
  };
  var S$Eval = Object.assign({
    _: () => S$Eval
  }, S);
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C1() {
      return C[1] = dart.const({
        __proto__: remote_config.RemoteConfigLogLevel.prototype,
        [_name$]: "RemoteConfigLogLevel.debug",
        index: 0
      });
    },
    get C2() {
      return C[2] = dart.const({
        __proto__: remote_config.RemoteConfigLogLevel.prototype,
        [_name$]: "RemoteConfigLogLevel.error",
        index: 1
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: remote_config.RemoteConfigLogLevel.prototype,
        [_name$]: "RemoteConfigLogLevel.silent",
        index: 2
      });
    },
    get C0() {
      return C[0] = dart.constMap(remote_config.RemoteConfigLogLevel, core.String, [C[1] || CT.C1, "debug", C[2] || CT.C2, "error", C[3] || CT.C3, "silent"]);
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: remote_config.RemoteConfigValueSource.prototype,
        [_name$]: "RemoteConfigValueSource.static",
        index: 0
      });
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: remote_config.RemoteConfigValueSource.prototype,
        [_name$]: "RemoteConfigValueSource.defaults",
        index: 1
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: remote_config.RemoteConfigValueSource.prototype,
        [_name$]: "RemoteConfigValueSource.remote",
        index: 2
      });
    },
    get C7() {
      return C[7] = dart.constList([C[4] || CT.C4, C[5] || CT.C5, C[6] || CT.C6], remote_config.RemoteConfigValueSource);
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: remote_config.RemoteConfigFetchStatus.prototype,
        [_name$]: "RemoteConfigFetchStatus.notFetchedYet",
        index: 0
      });
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: remote_config.RemoteConfigFetchStatus.prototype,
        [_name$]: "RemoteConfigFetchStatus.success",
        index: 1
      });
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: remote_config.RemoteConfigFetchStatus.prototype,
        [_name$]: "RemoteConfigFetchStatus.failure",
        index: 2
      });
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: remote_config.RemoteConfigFetchStatus.prototype,
        [_name$]: "RemoteConfigFetchStatus.throttle",
        index: 3
      });
    },
    get C12() {
      return C[12] = dart.constList([C[8] || CT.C8, C[9] || CT.C9, C[10] || CT.C10, C[11] || CT.C11], remote_config.RemoteConfigFetchStatus);
    },
    get C13() {
      return C[13] = dart.constList([C[1] || CT.C1, C[2] || CT.C2, C[3] || CT.C3], remote_config.RemoteConfigLogLevel);
    }
  }, false);
  var C = Array(14).fill(void 0);
  var I = [
    "file:///C:/Users/thoma/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/firebase-9.0.1/lib/src/remote_config.dart",
    "package:firebase/src/remote_config.dart"
  ];
  var _name$ = dart.privateName(remote_config, "_name");
  remote_config.RemoteConfig = class RemoteConfig extends js.JsObjectWrapper$(dart.lazyJSType(() => dart.global.firebase.remoteConfig.RemoteConfig, "firebase.remoteConfig.RemoteConfig")) {
    static getInstance(jsObject) {
      let t3, t2, t1, t0;
      if (jsObject == null) dart.nullFailed(I[0], 10, 54, "jsObject");
      t0 = remote_config.RemoteConfig._expando;
      t1 = jsObject;
      t2 = t0._get(t1);
      return t2 == null ? (t3 = new remote_config.RemoteConfig._fromJsObject(jsObject), t0._set(t1, t3), t3) : t2;
    }
    get settings() {
      return new remote_config.RemoteConfigSettings._fromJsObject(this.jsObject.settings);
    }
    get defaultConfig() {
      return T.MapOfString$dynamic().unmodifiable(utils.dartifyMap(this.jsObject.defaultConfig));
    }
    set defaultConfig(value) {
      if (value == null) dart.nullFailed(I[0], 35, 42, "value");
      this.jsObject.defaultConfig = core.Object.as(utils.jsify(value));
    }
    get fetchTime() {
      if (dart.notNull(this.jsObject.fetchTimeMillis) < 0) {
        return null;
      } else {
        return new core.DateTime.fromMillisecondsSinceEpoch(this.jsObject.fetchTimeMillis);
      }
    }
    get lastFetchStatus() {
      switch (this.jsObject.lastFetchStatus) {
        case "no-fetch-yet":
        {
          return remote_config.RemoteConfigFetchStatus.notFetchedYet;
        }
        case "success":
        {
          return remote_config.RemoteConfigFetchStatus.success;
        }
        case "failure":
        {
          return remote_config.RemoteConfigFetchStatus.failure;
        }
        case "throttle":
        {
          return remote_config.RemoteConfigFetchStatus.throttle;
        }
        default:
        {
          dart.throw(new core.UnimplementedError.new(this.jsObject.lastFetchStatus));
        }
      }
    }
    activate() {
      return async.async(core.bool, (function* activate() {
        return utils.handleThenable(core.bool, this.jsObject.activate());
      }).bind(this));
    }
    ensureInitialized() {
      return async.async(dart.void, (function* ensureInitialized() {
        return utils.handleThenable(dart.void, this.jsObject.ensureInitialized());
      }).bind(this));
    }
    fetch() {
      return async.async(dart.void, (function* fetch() {
        return utils.handleThenable(dart.void, this.jsObject.fetch());
      }).bind(this));
    }
    fetchAndActivate() {
      return async.async(core.bool, (function* fetchAndActivate() {
        return utils.handleThenable(core.bool, this.jsObject.fetchAndActivate());
      }).bind(this));
    }
    getAll() {
      let keys = dart.global.Object.keys(core.Object.as(this.jsObject.getAll()));
      let entries = keys[$map](T.MapEntryOfString$RemoteConfigValue(), dart.fn(k => new (T.MapEntryOfString$RemoteConfigValue()).__(core.String.as(k), this.getValue(core.String.as(k))), T.dynamicToMapEntryOfString$RemoteConfigValue()));
      return T.MapOfString$RemoteConfigValue().fromEntries(entries);
    }
    getBoolean(key) {
      if (key == null) dart.nullFailed(I[0], 93, 26, "key");
      return this.jsObject.getBoolean(key);
    }
    getNumber(key) {
      if (key == null) dart.nullFailed(I[0], 97, 24, "key");
      return this.jsObject.getNumber(key);
    }
    getString(key) {
      if (key == null) dart.nullFailed(I[0], 101, 27, "key");
      return this.jsObject.getString(key);
    }
    getValue(key) {
      if (key == null) dart.nullFailed(I[0], 104, 37, "key");
      return new remote_config.RemoteConfigValue._fromJsObject(this.jsObject.getValue(key));
    }
    setLogLevel(value) {
      if (value == null) dart.nullFailed(I[0], 107, 41, "value");
      this.jsObject.setLogLevel(dart.nullCheck((C[0] || CT.C0)[$_get](value)));
    }
  };
  (remote_config.RemoteConfig._fromJsObject = function(jsObject) {
    if (jsObject == null) dart.nullFailed(I[0], 13, 49, "jsObject");
    remote_config.RemoteConfig.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = remote_config.RemoteConfig.prototype;
  dart.addTypeTests(remote_config.RemoteConfig);
  dart.addTypeCaches(remote_config.RemoteConfig);
  dart.setMethodSignature(remote_config.RemoteConfig, () => ({
    __proto__: dart.getMethods(remote_config.RemoteConfig.__proto__),
    activate: dart.fnType(async.Future$(core.bool), []),
    ensureInitialized: dart.fnType(async.Future$(dart.void), []),
    fetch: dart.fnType(async.Future$(dart.void), []),
    fetchAndActivate: dart.fnType(async.Future$(core.bool), []),
    getAll: dart.fnType(core.Map$(core.String, remote_config.RemoteConfigValue), []),
    getBoolean: dart.fnType(core.bool, [core.String]),
    getNumber: dart.fnType(core.num, [core.String]),
    getString: dart.fnType(core.String, [core.String]),
    getValue: dart.fnType(remote_config.RemoteConfigValue, [core.String]),
    setLogLevel: dart.fnType(dart.void, [remote_config.RemoteConfigLogLevel])
  }));
  dart.setGetterSignature(remote_config.RemoteConfig, () => ({
    __proto__: dart.getGetters(remote_config.RemoteConfig.__proto__),
    settings: remote_config.RemoteConfigSettings,
    defaultConfig: core.Map$(core.String, dart.dynamic),
    fetchTime: dart.nullable(core.DateTime),
    lastFetchStatus: remote_config.RemoteConfigFetchStatus
  }));
  dart.setSetterSignature(remote_config.RemoteConfig, () => ({
    __proto__: dart.getSetters(remote_config.RemoteConfig.__proto__),
    defaultConfig: core.Map$(core.String, dart.dynamic)
  }));
  dart.setLibraryUri(remote_config.RemoteConfig, I[1]);
  dart.defineLazy(remote_config.RemoteConfig, {
    /*remote_config.RemoteConfig._expando*/get _expando() {
      return new (T.ExpandoOfRemoteConfig()).new();
    }
  }, false);
  remote_config.RemoteConfigValue = class RemoteConfigValue extends js.JsObjectWrapper$(dart.anonymousJSType("ValueJsImpl")) {
    asBoolean() {
      return this.jsObject.asBoolean();
    }
    asNumber() {
      return this.jsObject.asNumber();
    }
    asString() {
      return this.jsObject.asString();
    }
    getSource() {
      switch (this.jsObject.getSource()) {
        case "static":
        {
          return remote_config.RemoteConfigValueSource.static;
        }
        case "default":
        {
          return remote_config.RemoteConfigValueSource.defaults;
        }
        case "remote":
        {
          return remote_config.RemoteConfigValueSource.remote;
        }
        default:
        {
          dart.throw(new core.UnimplementedError.new(this.jsObject.getSource()));
        }
      }
    }
  };
  (remote_config.RemoteConfigValue._fromJsObject = function(jsObject) {
    if (jsObject == null) dart.nullFailed(I[0], 118, 47, "jsObject");
    remote_config.RemoteConfigValue.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = remote_config.RemoteConfigValue.prototype;
  dart.addTypeTests(remote_config.RemoteConfigValue);
  dart.addTypeCaches(remote_config.RemoteConfigValue);
  dart.setMethodSignature(remote_config.RemoteConfigValue, () => ({
    __proto__: dart.getMethods(remote_config.RemoteConfigValue.__proto__),
    asBoolean: dart.fnType(core.bool, []),
    asNumber: dart.fnType(core.num, []),
    asString: dart.fnType(core.String, []),
    getSource: dart.fnType(remote_config.RemoteConfigValueSource, [])
  }));
  dart.setLibraryUri(remote_config.RemoteConfigValue, I[1]);
  remote_config.RemoteConfigValueSource = class RemoteConfigValueSource extends core.Object {
    toString() {
      return this[_name$];
    }
  };
  (remote_config.RemoteConfigValueSource.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[0], 148, 6, "index");
    if (_name == null) dart.nullFailed(I[0], 148, 6, "_name");
    this.index = index;
    this[_name$] = _name;
    ;
  }).prototype = remote_config.RemoteConfigValueSource.prototype;
  dart.addTypeTests(remote_config.RemoteConfigValueSource);
  dart.addTypeCaches(remote_config.RemoteConfigValueSource);
  dart.setLibraryUri(remote_config.RemoteConfigValueSource, I[1]);
  dart.setFieldSignature(remote_config.RemoteConfigValueSource, () => ({
    __proto__: dart.getFields(remote_config.RemoteConfigValueSource.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(remote_config.RemoteConfigValueSource, ['toString']);
  remote_config.RemoteConfigValueSource.static = C[4] || CT.C4;
  remote_config.RemoteConfigValueSource.defaults = C[5] || CT.C5;
  remote_config.RemoteConfigValueSource.remote = C[6] || CT.C6;
  remote_config.RemoteConfigValueSource.values = C[7] || CT.C7;
  remote_config.RemoteConfigSettings = class RemoteConfigSettings extends js.JsObjectWrapper$(dart.anonymousJSType("SettingsJsImpl")) {
    get minimumFetchInterval() {
      return new core.Duration.new({milliseconds: this.jsObject.minimumFetchIntervalMillis});
    }
    set minimumFetchInterval(value) {
      if (value == null) dart.nullFailed(I[0], 169, 37, "value");
      this.jsObject.minimumFetchIntervalMillis = value.inMilliseconds;
    }
    get fetchTimeoutMillis() {
      return new core.Duration.new({milliseconds: this.jsObject.fetchTimeoutMillis});
    }
    set fetchTimeoutMillis(value) {
      if (value == null) dart.nullFailed(I[0], 178, 35, "value");
      this.jsObject.fetchTimeoutMillis = value.inMilliseconds;
    }
  };
  (remote_config.RemoteConfigSettings._fromJsObject = function(jsObject) {
    if (jsObject == null) dart.nullFailed(I[0], 161, 53, "jsObject");
    remote_config.RemoteConfigSettings.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = remote_config.RemoteConfigSettings.prototype;
  dart.addTypeTests(remote_config.RemoteConfigSettings);
  dart.addTypeCaches(remote_config.RemoteConfigSettings);
  dart.setGetterSignature(remote_config.RemoteConfigSettings, () => ({
    __proto__: dart.getGetters(remote_config.RemoteConfigSettings.__proto__),
    minimumFetchInterval: core.Duration,
    fetchTimeoutMillis: core.Duration
  }));
  dart.setSetterSignature(remote_config.RemoteConfigSettings, () => ({
    __proto__: dart.getSetters(remote_config.RemoteConfigSettings.__proto__),
    minimumFetchInterval: core.Duration,
    fetchTimeoutMillis: core.Duration
  }));
  dart.setLibraryUri(remote_config.RemoteConfigSettings, I[1]);
  remote_config.RemoteConfigFetchStatus = class RemoteConfigFetchStatus extends core.Object {
    toString() {
      return this[_name$];
    }
  };
  (remote_config.RemoteConfigFetchStatus.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[0], 184, 6, "index");
    if (_name == null) dart.nullFailed(I[0], 184, 6, "_name");
    this.index = index;
    this[_name$] = _name;
    ;
  }).prototype = remote_config.RemoteConfigFetchStatus.prototype;
  dart.addTypeTests(remote_config.RemoteConfigFetchStatus);
  dart.addTypeCaches(remote_config.RemoteConfigFetchStatus);
  dart.setLibraryUri(remote_config.RemoteConfigFetchStatus, I[1]);
  dart.setFieldSignature(remote_config.RemoteConfigFetchStatus, () => ({
    __proto__: dart.getFields(remote_config.RemoteConfigFetchStatus.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(remote_config.RemoteConfigFetchStatus, ['toString']);
  remote_config.RemoteConfigFetchStatus.notFetchedYet = C[8] || CT.C8;
  remote_config.RemoteConfigFetchStatus.success = C[9] || CT.C9;
  remote_config.RemoteConfigFetchStatus.failure = C[10] || CT.C10;
  remote_config.RemoteConfigFetchStatus.throttle = C[11] || CT.C11;
  remote_config.RemoteConfigFetchStatus.values = C[12] || CT.C12;
  remote_config.RemoteConfigLogLevel = class RemoteConfigLogLevel extends core.Object {
    toString() {
      return this[_name$];
    }
  };
  (remote_config.RemoteConfigLogLevel.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[0], 199, 6, "index");
    if (_name == null) dart.nullFailed(I[0], 199, 6, "_name");
    this.index = index;
    this[_name$] = _name;
    ;
  }).prototype = remote_config.RemoteConfigLogLevel.prototype;
  dart.addTypeTests(remote_config.RemoteConfigLogLevel);
  dart.addTypeCaches(remote_config.RemoteConfigLogLevel);
  dart.setLibraryUri(remote_config.RemoteConfigLogLevel, I[1]);
  dart.setFieldSignature(remote_config.RemoteConfigLogLevel, () => ({
    __proto__: dart.getFields(remote_config.RemoteConfigLogLevel.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(remote_config.RemoteConfigLogLevel, ['toString']);
  remote_config.RemoteConfigLogLevel.debug = C[1] || CT.C1;
  remote_config.RemoteConfigLogLevel.error = C[2] || CT.C2;
  remote_config.RemoteConfigLogLevel.silent = C[3] || CT.C3;
  remote_config.RemoteConfigLogLevel.values = C[13] || CT.C13;
  dart.trackLibraries("packages/firebase/src/remote_config.dart", {
    "package:firebase/src/remote_config.dart": remote_config
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["remote_config.dart"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uBASqD;;;AAC/C;WAAS,QAAQ;WAAT;YAAW,oBAAiB,6CAAc,QAAQ,GAAlD;IAAmD;;AAO3D,YAAqB,sDAAc,AAAS;IAAS;;AAerD,YAAI,sCAAa,iBAAW,AAAS;IAAe;;UAEjB;AACA,MAArC,AAAS,8BAAA,eAAgB,YAAM,KAAK;IACtC;;AAKE,UAA6B,aAAzB,AAAS,iCAAkB;AAC7B,cAAO;;AAEP,cAAgB,8CAA2B,AAAS;;IAExD;;AAIE,cAAQ,AAAS;;;AAEb,gBAA+B;;;;AAE/B,gBAA+B;;;;AAE/B,gBAA+B;;;;AAE/B,gBAA+B;;;;AAEmB,UAAlD,WAAM,gCAAmB,AAAS;;;IAExC;;AAKqB;AAAY,+CAAe,AAAS;MAAW;;;AAGtC;AAC1B,+CAAe,AAAS;MAAoB;;;AAG9B;AAAY,+CAAe,AAAS;MAAQ;;;AAKjC;AACzB,+CAAe,AAAS;MAAmB;;;AAIvC,iBAAO,uCAAsB,AAAS;AACtC,oBAAU,AAAK,IAAD,+CAChB,QAAS,KAAM,+DAAoC,CAAC,GAAE,6BAAS,CAAC;AACpE,YAAO,+CAA2C,OAAO;IAC3D;;UAIuB;AAAQ,YAAA,AAAS,0BAAW,GAAG;IAAC;;UAIlC;AAAQ,YAAA,AAAS,yBAAU,GAAG;IAAC;;UAI5B;AAAQ,YAAA,AAAS,yBAAU,GAAG;IAAC;;UAGrB;AAC9B,YAAkB,mDAAc,AAAS,uBAAS,GAAG;IAAE;;UAErB;AAK1B,MAJV,AAAS,0BAID,eAAP,uBAAC,KAAK;IACT;;;QApG8C;AAClC,iEAAa,QAAQ;;EAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MANrB,mCAAQ;YAAG;;;;;AAoHJ,YAAA,AAAS;IAAW;;AAGtB,YAAA,AAAS;IAAU;;AAGhB,YAAA,AAAS;IAAU;;AAItC,cAAQ,AAAS;;;AAEb,gBAA+B;;;;AAE/B,gBAA+B;;;;AAE/B,gBAA+B;;;;AAEe,UAA9C,WAAM,gCAAmB,AAAS;;;IAExC;;;QA1B4C;AAChC,sEAAa,QAAQ;;EAAC;;;;;;;;;;;;;;IAsCpC;;;QATK;;;;;EASL;;;;;;;;;;;;;;;;AAUM,kDAAuB,AAAS;IAA2B;;UAE7B;AAC0B,MAA1D,AAAS,2CAA6B,AAAM,KAAD;IAC7C;;AAKI,kDAAuB,AAAS;IAAmB;;UAEvB;AACoB,MAAlD,AAAS,mCAAqB,AAAM,KAAD;IACrC;;;QAnBkD;AACtC,yEAAa,QAAQ;;EAAC;;;;;;;;;;;;;;;;;IAkCpC;;;QAZK;;;;;EAYL;;;;;;;;;;;;;;;;;;IAOA;;;QAJK;;;;;EAIL","file":"../../../../../../../../../../../packages/firebase/src/remote_config.dart.lib.js"}');
  // Exports:
  return {
    src__remote_config: remote_config
  };
}));

//# sourceMappingURL=remote_config.dart.lib.js.map
